{
	"name": "key rotation script",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "rndsparkpool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "37beab54-fc27-4f90-a3cb-1a2d03268488"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/85daead2-a68a-4f66-9432-4b2decfc8822/resourceGroups/DAI-RnD-RG/providers/Microsoft.Synapse/workspaces/synapserndworkspace/bigDataPools/rndsparkpool",
				"name": "rndsparkpool",
				"type": "Spark",
				"endpoint": "https://synapserndworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/rndsparkpool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# pip install azure-keyvault-secrets"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# import azure.functions as func\r\n",
					"import logging\r\n",
					"from azure.identity import ManagedIdentityCredential\r\n",
					"from azure.mgmt.storage import StorageManagementClient\r\n",
					"from azure.keyvault.secrets import SecretClient\r\n",
					"from datetime import datetime, timedelta"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"source": [
					"value ={\r\n",
					"      \"id\": \"https://akv-rt-develop-rt-comm.vault.azure.net/secrets/45-day-exp-test\",\r\n",
					"      \"attributes\": {\r\n",
					"        \"enabled\": \"true\",\r\n",
					"        \"nbf\": 1721639412,\r\n",
					"        \"exp\": 1725959356,\r\n",
					"        \"created\": 1721639611,\r\n",
					"        \"updated\": 1724032012,\r\n",
					"        \"recoveryLevel\": \"Recoverable\",\r\n",
					"        \"recoverableDays\": 90\r\n",
					"      },\r\n",
					"      \"tags\": {\r\n",
					"        \"description\": \"This Secret was generated to test the Secret Expiry Key Vault notification (45 days) \",\r\n",
					"        \"subscription_id\" : \"85daead2-a68a-4f66-9432-4b2decfc8822\",\r\n",
					"        \"resource_group\" : \"omkar-rg\",\r\n",
					"        \"resource_type\" : \"storage account\",\r\n",
					"        \"resource_name\": \"pocpoc1\",\r\n",
					"        \"key_vault_url\":\"https://kv-rotatation.vault.azure.net/\",\r\n",
					"        \"days_after_expiry\":90,\r\n",
					"        \"secret_name\" : \"stgact\"\r\n",
					"      }\r\n",
					"    }"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"print(type(value))"
				],
				"execution_count": 14
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"subs_id = value['tags']['subscription_id']\r\n",
					"rg_name = value['tags']['resource_group']\r\n",
					"resource_name = value['tags']['resource_name']\r\n",
					"kv_url = value['tags'][\"key_vault_url\"]\r\n",
					"days_after_expiry = value['tags'][\"days_after_expiry\"]\r\n",
					"secret_name = value['tags'][\"secret_name\"]\r\n",
					"resource_type = value[\"tags\"][\"resource_type\"]"
				],
				"execution_count": 15
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"credential = ManagedIdentityCredential()  # type: ignore\r\n",
					"print('Logging in HOLD ON...')"
				],
				"execution_count": 16
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"if (resource_type == \"storage_account\"):\r\n",
					"        storage_client = StorageManagementClient(credential, subs_id)\r\n",
					"        print('Getting the existing key')\r\n",
					"        keys_before = storage_client.storage_accounts.list_keys(rg_name, resource_name)  # arg1 is resource groupName, arg2 is StorageAcct Name\r\n",
					"        print('before - ' + keys_before.keys[0].value)\r\n",
					""
				],
				"execution_count": 17
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				]
			}
		]
	}
}